spring:
  config:
    import: db.yml, secretkey.yml

  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true

  servlet:
    multipart:
      maxFileSize: 50MB # 파일 하나의 최대 크기
      maxRequestSize: 50MB  # 한 번에 최대 업로드 가능 용량

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_OAUTH_CLIENT_ID} # 발급 받은 Client ID
            client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET} # 발급 받은 Client Secret
            scope: # 기본 값 openid,profile,email => profile, email 로 설정 변경
              - profile
              - email

          naver:
            client-id: ${NAVER_OAUTH_CLIENT_ID} # 발급 받은 Client ID
            client-secret: ${NAVER_OAUTH_CLIENT_SECRET} # 발급 받은 Client Secret
            client-authentication-method: client_secret_post # 인가 코드로 엑세스 토큰 요청 방법을 정의
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - name
              - email
            client-name: Naver

          kakao:
            client-id: ${KAKAO_OAUTH_CLIENT_ID} # 발급 받은 Client ID
            client-secret: ${KAKAO_OAUTH_CLIENT_SECRET} # 발급 받은 Client Secret
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope: # https://developers.kakao.com/docs/latest/ko/kakaologin/common#user-info
              - account_email
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            client-name: Kakao

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize  #소셜 로그인 버튼을 눌렀을 때 이동할 URL. 해당 URL로 이동하면 소셜 로그인과 사용자 동의를 진행하고 인가코드를 발급하여 사용자 서비스 서버로 리다이렉트 한다.
            token-uri: https://nid.naver.com/oauth2.0/token   #사용자 서비스 서버가 Redirect URI로 전달받은 인가 코드로 액세스 토큰을 요청하는 URI이다.
            user-info-uri: https://openapi.naver.com/v1/nid/me # 서비스 서버가 발급받은 액세스 토큰으로 사용자 정보를 가져오는 URI이다.
            user-info-authentication-method: header # 사영자 정보 가져올 때, 토큰 보내는 방법
            user-name-attribute: response # Naver 응답 값 resultCode, message, response 중 response 지정

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-info-authentication-method: header
            user-name-attribute: id # Kakao 응답 값 id, connected_at, properties, kakao_account 중 id 지정
jwt:
  secret: ${JWT_SECRET_KEY_CODE}

logging:
  level:
    org.hibernate.SQL: debug

